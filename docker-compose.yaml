version: '3.7'

services:
  # frontend:
  #   build:
  #     context: client/
  #     target: release
  #   depends_on:
  #     - frontend-sidecar-env-gen
  #   ports:
  #   - 8081:8080
  #   env_file:
  #   - .env
  #   volumes:
  #   - env-js:/opt/app/config:ro
  #   image: todo/go-to-do-frontend:rc
  # # in k8s, it will be easier using sidecar with emptyDir vol
  # frontend-sidecar-env-gen:
  #   image: todo/dotenv-to-js-object:4ea
  #   working_dir: /data
  #   volumes:
  #   - env-js:/data 
  #   healthcheck:
  #     # healthy when env.js file is not empty
  #     test: ["CMD", "test", "-s", "/data/env.js"]
  #     timeout: 1s
  #     start_period: 1s
  #     interval: 10s
  #     retries: 3
  #   env_file:
  #   - .env
  #   command: ->
  #     --env-vars-filter=REACT_APP_
  #     --run-as=daemon
  #     --refresh-period=50
  api:
    build:
      context: server/
      target: release
    depends_on:
      - db
    ports:
      - 8080:8080
    environment:
      DB_CONNECTION: mongodb://${DB_USER}:${DB_PASS}@${DB_HOST}:27017/${DB_NAME}
      DB_NAME: ${DB_NAME}
    image: saurabh3460/golang-demo
    networks:
      - todo
  db:
    networks:
      - todo
    image: bitnami/mongodb:${DB_IMAGE_TAG}
    # volumes:
    #   - db-data:/bitnami/mongodb
    environment:
      MONGODB_ROOT_PASSWORD: ${DB_ROOT_PASS}
      MONGODB_DATABASE: ${DB_NAME}
      MONGODB_USERNAME: ${DB_USER}
      MONGODB_PASSWORD: ${DB_PASS}

networks:
  todo:
    driver: bridge

# volumes:
#   db-data:
#   env-js: